;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 13/09/2020 14:13:55
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2987      	GOTO       391
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x0003	0x0000      	NOP
0x0004	0x0000      	NOP
;__Lib_Delays.c,9 :: 		}
L_end_Delay_1us:
0x0005	0x0008      	RETURN
; end of _Delay_1us
_Delay_10us:
;__Lib_Delays.c,11 :: 		void Delay_10us() {
;__Lib_Delays.c,12 :: 		Delay_us(10);
0x0006	0x3006      	MOVLW      6
0x0007	0x1283      	BCF        STATUS, 5
0x0008	0x1303      	BCF        STATUS, 6
0x0009	0x00FD      	MOVWF      R13
L_Delay_10us0:
0x000A	0x0BFD      	DECFSZ     R13, 1
0x000B	0x280A      	GOTO       L_Delay_10us0
0x000C	0x0000      	NOP
;__Lib_Delays.c,13 :: 		}
L_end_Delay_10us:
0x000D	0x0008      	RETURN
; end of _Delay_10us
_Keypad_Key_Press:
;__Lib_Keypad4x4.c,39 :: 		
;__Lib_Keypad4x4.c,43 :: 		
0x000E	0x1283      	BCF        STATUS, 5
0x000F	0x1303      	BCF        STATUS, 6
0x0010	0x01B6      	CLRF       Keypad_Key_Press_rslt_L0
;__Lib_Keypad4x4.c,44 :: 		
0x0011	0x01B8      	CLRF       Keypad_Key_Press_loc_L0
;__Lib_Keypad4x4.c,45 :: 		
0x0012	0x01B9      	CLRF       Keypad_Key_Press_rowcnt_L0
;__Lib_Keypad4x4.c,46 :: 		
0x0013	0x3010      	MOVLW      16
0x0014	0x00BA      	MOVWF      Keypad_Key_Press_shifter_L0
;__Lib_Keypad4x4.c,48 :: 		
L_Keypad_Key_Press0:
0x0015	0x3004      	MOVLW      4
0x0016	0x0239      	SUBWF      Keypad_Key_Press_rowcnt_L0, 0
0x0017	0x1803      	BTFSC      STATUS, 0
0x0018	0x283F      	GOTO       L_Keypad_Key_Press1
;__Lib_Keypad4x4.c,50 :: 		
0x0019	0x30F0      	MOVLW      240
0x001A	0x0086      	MOVWF      keypadPort
;__Lib_Keypad4x4.c,51 :: 		
0x001B	0x3080      	MOVLW      128
0x001C	0x00F0      	MOVWF      R0
0x001D	0x0870      	MOVF       R0, 0
0x001E	0x3E06      	ADDLW      keypadPort
0x001F	0x0084      	MOVWF      FSR
0x0020	0x093A      	COMF       Keypad_Key_Press_shifter_L0, 0
0x0021	0x00F0      	MOVWF      R0
0x0022	0x0870      	MOVF       R0, 0
0x0023	0x0080      	MOVWF      INDF
;__Lib_Keypad4x4.c,55 :: 		
0x0024	0x2003      	CALL       _Delay_1us
;__Lib_Keypad4x4.c,56 :: 		
0x0025	0x2003      	CALL       _Delay_1us
;__Lib_Keypad4x4.c,57 :: 		
0x0026	0x300F      	MOVLW      15
0x0027	0x0506      	ANDWF      keypadPort, 0
0x0028	0x00F0      	MOVWF      R0
0x0029	0x0870      	MOVF       R0, 0
0x002A	0x00B7      	MOVWF      Keypad_Key_Press_kdata_L0
;__Lib_Keypad4x4.c,58 :: 		
0x002B	0x0870      	MOVF       R0, 0
0x002C	0x1903      	BTFSC      STATUS, 2
0x002D	0x2839      	GOTO       L_Keypad_Key_Press2
;__Lib_Keypad4x4.c,60 :: 		
0x002E	0x0838      	MOVF       Keypad_Key_Press_loc_L0, 0
0x002F	0x00B6      	MOVWF      Keypad_Key_Press_rslt_L0
;__Lib_Keypad4x4.c,61 :: 		
L_Keypad_Key_Press3:
0x0030	0x0837      	MOVF       Keypad_Key_Press_kdata_L0, 0
0x0031	0x1903      	BTFSC      STATUS, 2
0x0032	0x2837      	GOTO       L_Keypad_Key_Press4
;__Lib_Keypad4x4.c,62 :: 		
0x0033	0x0CB7      	RRF        Keypad_Key_Press_kdata_L0, 1
0x0034	0x13B7      	BCF        Keypad_Key_Press_kdata_L0, 7
;__Lib_Keypad4x4.c,63 :: 		
0x0035	0x0AB6      	INCF       Keypad_Key_Press_rslt_L0, 1
;__Lib_Keypad4x4.c,64 :: 		
0x0036	0x2830      	GOTO       L_Keypad_Key_Press3
L_Keypad_Key_Press4:
;__Lib_Keypad4x4.c,66 :: 		
0x0037	0x3004      	MOVLW      4
0x0038	0x00B9      	MOVWF      Keypad_Key_Press_rowcnt_L0
;__Lib_Keypad4x4.c,67 :: 		
L_Keypad_Key_Press2:
;__Lib_Keypad4x4.c,68 :: 		
0x0039	0x0DBA      	RLF        Keypad_Key_Press_shifter_L0, 1
0x003A	0x103A      	BCF        Keypad_Key_Press_shifter_L0, 0
;__Lib_Keypad4x4.c,69 :: 		
0x003B	0x3004      	MOVLW      4
0x003C	0x07B8      	ADDWF      Keypad_Key_Press_loc_L0, 1
;__Lib_Keypad4x4.c,70 :: 		
0x003D	0x0AB9      	INCF       Keypad_Key_Press_rowcnt_L0, 1
;__Lib_Keypad4x4.c,71 :: 		
0x003E	0x2815      	GOTO       L_Keypad_Key_Press0
L_Keypad_Key_Press1:
;__Lib_Keypad4x4.c,73 :: 		
0x003F	0x0836      	MOVF       Keypad_Key_Press_rslt_L0, 0
0x0040	0x00F0      	MOVWF      R0
;__Lib_Keypad4x4.c,74 :: 		
L_end_Keypad_Key_Press:
0x0041	0x0008      	RETURN
; end of _Keypad_Key_Press
_Keypad_Key_Click:
;__Lib_Keypad4x4.c,77 :: 		
;__Lib_Keypad4x4.c,81 :: 		
0x0042	0x200E      	CALL       _Keypad_Key_Press
0x0043	0x0870      	MOVF       R0, 0
0x0044	0x00B5      	MOVWF      Keypad_Key_Click_rslt_L0
;__Lib_Keypad4x4.c,83 :: 		
L_Keypad_Key_Click5:
0x0045	0x300F      	MOVLW      15
0x0046	0x0506      	ANDWF      keypadPort, 0
0x0047	0x00F0      	MOVWF      R0
0x0048	0x1903      	BTFSC      STATUS, 2
0x0049	0x284C      	GOTO       L_Keypad_Key_Click6
;__Lib_Keypad4x4.c,84 :: 		
0x004A	0x2006      	CALL       _Delay_10us
0x004B	0x2845      	GOTO       L_Keypad_Key_Click5
L_Keypad_Key_Click6:
;__Lib_Keypad4x4.c,86 :: 		
0x004C	0x0835      	MOVF       Keypad_Key_Click_rslt_L0, 0
0x004D	0x00F0      	MOVWF      R0
;__Lib_Keypad4x4.c,87 :: 		
L_end_Keypad_Key_Click:
0x004E	0x0008      	RETURN
; end of _Keypad_Key_Click
_UART1_Write:
;__Lib_UART_c67.c,39 :: 		
;__Lib_UART_c67.c,40 :: 		
L_UART1_Write3:
0x004F	0x1683      	BSF        STATUS, 5
0x0050	0x1303      	BCF        STATUS, 6
0x0051	0x1898      	BTFSC      TXSTA, 1
0x0052	0x2855      	GOTO       L_UART1_Write4
;__Lib_UART_c67.c,41 :: 		
0x0053	0x0000      	NOP
0x0054	0x284F      	GOTO       L_UART1_Write3
L_UART1_Write4:
;__Lib_UART_c67.c,42 :: 		
0x0055	0x1283      	BCF        STATUS, 5
0x0056	0x0835      	MOVF       FARG_UART1_Write_data_, 0
0x0057	0x0099      	MOVWF      TXREG
;__Lib_UART_c67.c,43 :: 		
L_end_UART1_Write:
0x0058	0x0008      	RETURN
; end of _UART1_Write
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0059	0x1283      	BCF        STATUS, 5
0x005A	0x1303      	BCF        STATUS, 6
0x005B	0x082F      	MOVF       ___DoICPAddr+1, 0
0x005C	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x005D	0x082E      	MOVF       ___DoICPAddr, 0
0x005E	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x005F	0x0008      	RETURN
; end of _____DoICP
_Keypad_Init:
;__Lib_Keypad4x4.c,34 :: 		
;__Lib_Keypad4x4.c,35 :: 		
0x0060	0x3080      	MOVLW      128
0x0061	0x1283      	BCF        STATUS, 5
0x0062	0x1303      	BCF        STATUS, 6
0x0063	0x00F0      	MOVWF      R0
0x0064	0x0870      	MOVF       R0, 0
0x0065	0x3E06      	ADDLW      keypadPort
0x0066	0x0084      	MOVWF      FSR
0x0067	0x30FF      	MOVLW      255
0x0068	0x0080      	MOVWF      INDF
;__Lib_Keypad4x4.c,36 :: 		
L_end_Keypad_Init:
0x0069	0x0008      	RETURN
; end of _Keypad_Init
_UART1_Data_Ready:
;__Lib_UART_c67.c,16 :: 		
;__Lib_UART_c67.c,17 :: 		
0x006A	0x3000      	MOVLW      0
0x006B	0x1283      	BCF        STATUS, 5
0x006C	0x1303      	BCF        STATUS, 6
0x006D	0x1A8C      	BTFSC      PIR1, 5
0x006E	0x3001      	MOVLW      1
0x006F	0x00F0      	MOVWF      R0
;__Lib_UART_c67.c,18 :: 		
L_end_UART1_Data_Ready:
0x0070	0x0008      	RETURN
; end of _UART1_Data_Ready
_UART1_Read:
;__Lib_UART_c67.c,21 :: 		
;__Lib_UART_c67.c,24 :: 		
0x0071	0x1283      	BCF        STATUS, 5
0x0072	0x1303      	BCF        STATUS, 6
0x0073	0x081A      	MOVF       RCREG, 0
0x0074	0x00F1      	MOVWF      R1
;__Lib_UART_c67.c,25 :: 		
0x0075	0x1C98      	BTFSS      RCSTA, 1
0x0076	0x2879      	GOTO       L_UART1_Read2
;__Lib_UART_c67.c,26 :: 		
0x0077	0x1218      	BCF        RCSTA, 4
;__Lib_UART_c67.c,27 :: 		
0x0078	0x1618      	BSF        RCSTA, 4
;__Lib_UART_c67.c,28 :: 		
L_UART1_Read2:
;__Lib_UART_c67.c,29 :: 		
0x0079	0x0871      	MOVF       R1, 0
0x007A	0x00F0      	MOVWF      R0
;__Lib_UART_c67.c,30 :: 		
L_end_UART1_Read:
0x007B	0x0008      	RETURN
; end of _UART1_Read
_UART1_Init:
;__Lib_UART_c67.c,2 :: 		
;__Lib_UART_c67.c,5 :: 		
0x007C	0x1683      	BSF        STATUS, 5
0x007D	0x1303      	BCF        STATUS, 6
0x007E	0x1698      	BSF        TXSTA, 5
;__Lib_UART_c67.c,6 :: 		
0x007F	0x3090      	MOVLW      144
0x0080	0x1283      	BCF        STATUS, 5
0x0081	0x0098      	MOVWF      RCSTA
;__Lib_UART_c67.c,7 :: 		
0x0082	0x1683      	BSF        STATUS, 5
0x0083	0x1787      	BSF        TRISC7_bit, BitPos(TRISC7_bit+0)
;__Lib_UART_c67.c,8 :: 		
0x0084	0x1307      	BCF        TRISC6_bit, BitPos(TRISC6_bit+0)
;__Lib_UART_c67.c,10 :: 		
L_UART1_Init0:
0x0085	0x1283      	BCF        STATUS, 5
0x0086	0x1E8C      	BTFSS      PIR1, 5
0x0087	0x288B      	GOTO       L_UART1_Init1
;__Lib_UART_c67.c,11 :: 		
0x0088	0x081A      	MOVF       RCREG, 0
0x0089	0x00F0      	MOVWF      R0
0x008A	0x2885      	GOTO       L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_c67.c,12 :: 		
L_end_UART1_Init:
0x008B	0x0008      	RETURN
; end of _UART1_Init
_get_key:
;Keypad.c,9 :: 		char get_key()
;Keypad.c,11 :: 		ala:
___get_key_ala:
;Keypad.c,12 :: 		while (kp[i] == 0)
L_get_key0:
0x008C	0x1283      	BCF        STATUS, 5
0x008D	0x1303      	BCF        STATUS, 6
0x008E	0x0830      	MOVF       _i, 0
0x008F	0x3E2C      	ADDLW      _kp
0x0090	0x0084      	MOVWF      FSR
0x0091	0x0800      	MOVF       INDF, 0
0x0092	0x3A00      	XORLW      0
0x0093	0x1D03      	BTFSS      STATUS, 2
0x0094	0x289E      	GOTO       L_get_key1
;Keypad.c,14 :: 		kp[i] = Keypad_Key_Click();
0x0095	0x0830      	MOVF       _i, 0
0x0096	0x3E2C      	ADDLW      _kp
0x0097	0x00B2      	MOVWF      FLOC__get_key
0x0098	0x2042      	CALL       _Keypad_Key_Click
0x0099	0x0832      	MOVF       FLOC__get_key, 0
0x009A	0x0084      	MOVWF      FSR
0x009B	0x0870      	MOVF       R0, 0
0x009C	0x0080      	MOVWF      INDF
;Keypad.c,15 :: 		}
0x009D	0x288C      	GOTO       L_get_key0
L_get_key1:
;Keypad.c,16 :: 		if(kp[i] == 1)     { kp[i]  = '1'; UART1_Write('1'); }
0x009E	0x0830      	MOVF       _i, 0
0x009F	0x3E2C      	ADDLW      _kp
0x00A0	0x0084      	MOVWF      FSR
0x00A1	0x0800      	MOVF       INDF, 0
0x00A2	0x3A01      	XORLW      1
0x00A3	0x1D03      	BTFSS      STATUS, 2
0x00A4	0x28AD      	GOTO       L_get_key2
0x00A5	0x0830      	MOVF       _i, 0
0x00A6	0x3E2C      	ADDLW      _kp
0x00A7	0x0084      	MOVWF      FSR
0x00A8	0x3031      	MOVLW      49
0x00A9	0x0080      	MOVWF      INDF
0x00AA	0x3031      	MOVLW      49
0x00AB	0x00B5      	MOVWF      FARG_UART1_Write_data_
0x00AC	0x204F      	CALL       _UART1_Write
L_get_key2:
;Keypad.c,17 :: 		if(kp[i] == 2)     { kp[i]  = '2'; UART1_Write('2'); }
0x00AD	0x0830      	MOVF       _i, 0
0x00AE	0x3E2C      	ADDLW      _kp
0x00AF	0x0084      	MOVWF      FSR
0x00B0	0x0800      	MOVF       INDF, 0
0x00B1	0x3A02      	XORLW      2
0x00B2	0x1D03      	BTFSS      STATUS, 2
0x00B3	0x28BC      	GOTO       L_get_key3
0x00B4	0x0830      	MOVF       _i, 0
0x00B5	0x3E2C      	ADDLW      _kp
0x00B6	0x0084      	MOVWF      FSR
0x00B7	0x3032      	MOVLW      50
0x00B8	0x0080      	MOVWF      INDF
0x00B9	0x3032      	MOVLW      50
0x00BA	0x00B5      	MOVWF      FARG_UART1_Write_data_
0x00BB	0x204F      	CALL       _UART1_Write
L_get_key3:
;Keypad.c,18 :: 		if(kp[i] == 3)     { kp[i]  = '3'; UART1_Write('3'); }
0x00BC	0x0830      	MOVF       _i, 0
0x00BD	0x3E2C      	ADDLW      _kp
0x00BE	0x0084      	MOVWF      FSR
0x00BF	0x0800      	MOVF       INDF, 0
0x00C0	0x3A03      	XORLW      3
0x00C1	0x1D03      	BTFSS      STATUS, 2
0x00C2	0x28CB      	GOTO       L_get_key4
0x00C3	0x0830      	MOVF       _i, 0
0x00C4	0x3E2C      	ADDLW      _kp
0x00C5	0x0084      	MOVWF      FSR
0x00C6	0x3033      	MOVLW      51
0x00C7	0x0080      	MOVWF      INDF
0x00C8	0x3033      	MOVLW      51
0x00C9	0x00B5      	MOVWF      FARG_UART1_Write_data_
0x00CA	0x204F      	CALL       _UART1_Write
L_get_key4:
;Keypad.c,19 :: 		if(kp[i] == 5)     { kp[i]  = '4'; UART1_Write('4'); }
0x00CB	0x0830      	MOVF       _i, 0
0x00CC	0x3E2C      	ADDLW      _kp
0x00CD	0x0084      	MOVWF      FSR
0x00CE	0x0800      	MOVF       INDF, 0
0x00CF	0x3A05      	XORLW      5
0x00D0	0x1D03      	BTFSS      STATUS, 2
0x00D1	0x28DA      	GOTO       L_get_key5
0x00D2	0x0830      	MOVF       _i, 0
0x00D3	0x3E2C      	ADDLW      _kp
0x00D4	0x0084      	MOVWF      FSR
0x00D5	0x3034      	MOVLW      52
0x00D6	0x0080      	MOVWF      INDF
0x00D7	0x3034      	MOVLW      52
0x00D8	0x00B5      	MOVWF      FARG_UART1_Write_data_
0x00D9	0x204F      	CALL       _UART1_Write
L_get_key5:
;Keypad.c,20 :: 		if(kp[i] == 6)     { kp[i]  = '5'; UART1_Write('5'); }
0x00DA	0x0830      	MOVF       _i, 0
0x00DB	0x3E2C      	ADDLW      _kp
0x00DC	0x0084      	MOVWF      FSR
0x00DD	0x0800      	MOVF       INDF, 0
0x00DE	0x3A06      	XORLW      6
0x00DF	0x1D03      	BTFSS      STATUS, 2
0x00E0	0x28E9      	GOTO       L_get_key6
0x00E1	0x0830      	MOVF       _i, 0
0x00E2	0x3E2C      	ADDLW      _kp
0x00E3	0x0084      	MOVWF      FSR
0x00E4	0x3035      	MOVLW      53
0x00E5	0x0080      	MOVWF      INDF
0x00E6	0x3035      	MOVLW      53
0x00E7	0x00B5      	MOVWF      FARG_UART1_Write_data_
0x00E8	0x204F      	CALL       _UART1_Write
L_get_key6:
;Keypad.c,21 :: 		if(kp[i] == 7)     { kp[i]  = '6'; UART1_Write('6'); }
0x00E9	0x0830      	MOVF       _i, 0
0x00EA	0x3E2C      	ADDLW      _kp
0x00EB	0x0084      	MOVWF      FSR
0x00EC	0x0800      	MOVF       INDF, 0
0x00ED	0x3A07      	XORLW      7
0x00EE	0x1D03      	BTFSS      STATUS, 2
0x00EF	0x28F8      	GOTO       L_get_key7
0x00F0	0x0830      	MOVF       _i, 0
0x00F1	0x3E2C      	ADDLW      _kp
0x00F2	0x0084      	MOVWF      FSR
0x00F3	0x3036      	MOVLW      54
0x00F4	0x0080      	MOVWF      INDF
0x00F5	0x3036      	MOVLW      54
0x00F6	0x00B5      	MOVWF      FARG_UART1_Write_data_
0x00F7	0x204F      	CALL       _UART1_Write
L_get_key7:
;Keypad.c,22 :: 		if(kp[i] == 9)     { kp[i]  = '7'; UART1_Write('7'); }
0x00F8	0x0830      	MOVF       _i, 0
0x00F9	0x3E2C      	ADDLW      _kp
0x00FA	0x0084      	MOVWF      FSR
0x00FB	0x0800      	MOVF       INDF, 0
0x00FC	0x3A09      	XORLW      9
0x00FD	0x1D03      	BTFSS      STATUS, 2
0x00FE	0x2907      	GOTO       L_get_key8
0x00FF	0x0830      	MOVF       _i, 0
0x0100	0x3E2C      	ADDLW      _kp
0x0101	0x0084      	MOVWF      FSR
0x0102	0x3037      	MOVLW      55
0x0103	0x0080      	MOVWF      INDF
0x0104	0x3037      	MOVLW      55
0x0105	0x00B5      	MOVWF      FARG_UART1_Write_data_
0x0106	0x204F      	CALL       _UART1_Write
L_get_key8:
;Keypad.c,23 :: 		if(kp[i] == 10)    { kp[i]  = '8'; UART1_Write('8'); }
0x0107	0x0830      	MOVF       _i, 0
0x0108	0x3E2C      	ADDLW      _kp
0x0109	0x0084      	MOVWF      FSR
0x010A	0x0800      	MOVF       INDF, 0
0x010B	0x3A0A      	XORLW      10
0x010C	0x1D03      	BTFSS      STATUS, 2
0x010D	0x2916      	GOTO       L_get_key9
0x010E	0x0830      	MOVF       _i, 0
0x010F	0x3E2C      	ADDLW      _kp
0x0110	0x0084      	MOVWF      FSR
0x0111	0x3038      	MOVLW      56
0x0112	0x0080      	MOVWF      INDF
0x0113	0x3038      	MOVLW      56
0x0114	0x00B5      	MOVWF      FARG_UART1_Write_data_
0x0115	0x204F      	CALL       _UART1_Write
L_get_key9:
;Keypad.c,24 :: 		if(kp[i] == 11)    { kp[i]  = '9'; UART1_Write('9'); }
0x0116	0x0830      	MOVF       _i, 0
0x0117	0x3E2C      	ADDLW      _kp
0x0118	0x0084      	MOVWF      FSR
0x0119	0x0800      	MOVF       INDF, 0
0x011A	0x3A0B      	XORLW      11
0x011B	0x1D03      	BTFSS      STATUS, 2
0x011C	0x2925      	GOTO       L_get_key10
0x011D	0x0830      	MOVF       _i, 0
0x011E	0x3E2C      	ADDLW      _kp
0x011F	0x0084      	MOVWF      FSR
0x0120	0x3039      	MOVLW      57
0x0121	0x0080      	MOVWF      INDF
0x0122	0x3039      	MOVLW      57
0x0123	0x00B5      	MOVWF      FARG_UART1_Write_data_
0x0124	0x204F      	CALL       _UART1_Write
L_get_key10:
;Keypad.c,25 :: 		if(kp[i] == 13)    { kp[i]  = '*'; UART1_Write('*'); }
0x0125	0x0830      	MOVF       _i, 0
0x0126	0x3E2C      	ADDLW      _kp
0x0127	0x0084      	MOVWF      FSR
0x0128	0x0800      	MOVF       INDF, 0
0x0129	0x3A0D      	XORLW      13
0x012A	0x1D03      	BTFSS      STATUS, 2
0x012B	0x2934      	GOTO       L_get_key11
0x012C	0x0830      	MOVF       _i, 0
0x012D	0x3E2C      	ADDLW      _kp
0x012E	0x0084      	MOVWF      FSR
0x012F	0x302A      	MOVLW      42
0x0130	0x0080      	MOVWF      INDF
0x0131	0x302A      	MOVLW      42
0x0132	0x00B5      	MOVWF      FARG_UART1_Write_data_
0x0133	0x204F      	CALL       _UART1_Write
L_get_key11:
;Keypad.c,26 :: 		if(kp[i] == 14)    { kp[i]  = '0'; UART1_Write('0'); }
0x0134	0x0830      	MOVF       _i, 0
0x0135	0x3E2C      	ADDLW      _kp
0x0136	0x0084      	MOVWF      FSR
0x0137	0x0800      	MOVF       INDF, 0
0x0138	0x3A0E      	XORLW      14
0x0139	0x1D03      	BTFSS      STATUS, 2
0x013A	0x2943      	GOTO       L_get_key12
0x013B	0x0830      	MOVF       _i, 0
0x013C	0x3E2C      	ADDLW      _kp
0x013D	0x0084      	MOVWF      FSR
0x013E	0x3030      	MOVLW      48
0x013F	0x0080      	MOVWF      INDF
0x0140	0x3030      	MOVLW      48
0x0141	0x00B5      	MOVWF      FARG_UART1_Write_data_
0x0142	0x204F      	CALL       _UART1_Write
L_get_key12:
;Keypad.c,27 :: 		if(kp[i] == 15)    { kp[i]  = '#'; UART1_Write('#'); }
0x0143	0x0830      	MOVF       _i, 0
0x0144	0x3E2C      	ADDLW      _kp
0x0145	0x0084      	MOVWF      FSR
0x0146	0x0800      	MOVF       INDF, 0
0x0147	0x3A0F      	XORLW      15
0x0148	0x1D03      	BTFSS      STATUS, 2
0x0149	0x2952      	GOTO       L_get_key13
0x014A	0x0830      	MOVF       _i, 0
0x014B	0x3E2C      	ADDLW      _kp
0x014C	0x0084      	MOVWF      FSR
0x014D	0x3023      	MOVLW      35
0x014E	0x0080      	MOVWF      INDF
0x014F	0x3023      	MOVLW      35
0x0150	0x00B5      	MOVWF      FARG_UART1_Write_data_
0x0151	0x204F      	CALL       _UART1_Write
L_get_key13:
;Keypad.c,29 :: 		if (kp[i] != oldstate) {                  // Pressed key differs from previous
0x0152	0x0830      	MOVF       _i, 0
0x0153	0x3E2C      	ADDLW      _kp
0x0154	0x0084      	MOVWF      FSR
0x0155	0x0800      	MOVF       INDF, 0
0x0156	0x0620      	XORWF      _oldstate, 0
0x0157	0x1903      	BTFSC      STATUS, 2
0x0158	0x295F      	GOTO       L_get_key14
;Keypad.c,30 :: 		oldstate = kp[i];
0x0159	0x0830      	MOVF       _i, 0
0x015A	0x3E2C      	ADDLW      _kp
0x015B	0x0084      	MOVWF      FSR
0x015C	0x0800      	MOVF       INDF, 0
0x015D	0x00A0      	MOVWF      _oldstate
;Keypad.c,31 :: 		}
0x015E	0x2964      	GOTO       L_get_key15
L_get_key14:
;Keypad.c,34 :: 		kp[i] = 0;
0x015F	0x0830      	MOVF       _i, 0
0x0160	0x3E2C      	ADDLW      _kp
0x0161	0x0084      	MOVWF      FSR
0x0162	0x0180      	CLRF       INDF
;Keypad.c,35 :: 		goto ala;
0x0163	0x288C      	GOTO       ___get_key_ala
;Keypad.c,36 :: 		}
L_get_key15:
;Keypad.c,37 :: 		}
L_end_get_key:
0x0164	0x0008      	RETURN
; end of _get_key
_UART1_Write_Text:
;__Lib_UART_c67.c,47 :: 		
;__Lib_UART_c67.c,48 :: 		
0x0165	0x1283      	BCF        STATUS, 5
0x0166	0x1303      	BCF        STATUS, 6
0x0167	0x01B4      	CLRF       UART1_Write_Text_counter_L0
;__Lib_UART_c67.c,50 :: 		
0x0168	0x0832      	MOVF       FARG_UART1_Write_Text_uart_text, 0
0x0169	0x0084      	MOVWF      FSR
0x016A	0x0800      	MOVF       INDF, 0
0x016B	0x00B3      	MOVWF      UART1_Write_Text_data__L0
;__Lib_UART_c67.c,51 :: 		
L_UART1_Write_Text5:
0x016C	0x0833      	MOVF       UART1_Write_Text_data__L0, 0
0x016D	0x3A00      	XORLW      0
0x016E	0x1903      	BTFSC      STATUS, 2
0x016F	0x297A      	GOTO       L_UART1_Write_Text6
;__Lib_UART_c67.c,52 :: 		
0x0170	0x0833      	MOVF       UART1_Write_Text_data__L0, 0
0x0171	0x00B5      	MOVWF      FARG_UART1_Write_data_
0x0172	0x204F      	CALL       _UART1_Write
;__Lib_UART_c67.c,53 :: 		
0x0173	0x0AB4      	INCF       UART1_Write_Text_counter_L0, 1
;__Lib_UART_c67.c,54 :: 		
0x0174	0x0834      	MOVF       UART1_Write_Text_counter_L0, 0
0x0175	0x0732      	ADDWF      FARG_UART1_Write_Text_uart_text, 0
0x0176	0x0084      	MOVWF      FSR
0x0177	0x0800      	MOVF       INDF, 0
0x0178	0x00B3      	MOVWF      UART1_Write_Text_data__L0
;__Lib_UART_c67.c,55 :: 		
0x0179	0x296C      	GOTO       L_UART1_Write_Text5
L_UART1_Write_Text6:
;__Lib_UART_c67.c,56 :: 		
L_end_UART1_Write_Text:
0x017A	0x0008      	RETURN
; end of _UART1_Write_Text
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x017B	0x2059      	CALL       _____DoICP
0x017C	0x118A      	BCF        PCLATH, 3
0x017D	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x017E	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x017F	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x0180	0x0AAE      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x0181	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x0182	0x0AAF      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x0183	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x0184	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x0185	0x297B      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x0186	0x0008      	RETURN
; end of ___CC2DW
_main:
0x0187	0x1283      	BCF        STATUS, 5
0x0188	0x1303      	BCF        STATUS, 6
0x0189	0x01A0      	CLRF       _oldstate
0x018A	0x304B      	MOVLW      75
0x018B	0x00A1      	MOVWF      ?lstr1_Keypad
0x018C	0x3065      	MOVLW      101
0x018D	0x00A2      	MOVWF      34
0x018E	0x3079      	MOVLW      121
0x018F	0x00A3      	MOVWF      35
0x0190	0x3050      	MOVLW      80
0x0191	0x00A4      	MOVWF      36
0x0192	0x3061      	MOVLW      97
0x0193	0x00A5      	MOVWF      37
0x0194	0x3064      	MOVLW      100
0x0195	0x00A6      	MOVWF      38
0x0196	0x3020      	MOVLW      32
0x0197	0x00A7      	MOVWF      39
0x0198	0x3034      	MOVLW      52
0x0199	0x00A8      	MOVWF      40
0x019A	0x302A      	MOVLW      42
0x019B	0x00A9      	MOVWF      41
0x019C	0x3033      	MOVLW      51
0x019D	0x00AA      	MOVWF      42
0x019E	0x01AB      	CLRF       43
0x019F	0x01AC      	CLRF       _kp
;Keypad.c,39 :: 		void main()
;Keypad.c,41 :: 		UART1_Init(9600);
0x01A0	0x3033      	MOVLW      51
0x01A1	0x1683      	BSF        STATUS, 5
0x01A2	0x0099      	MOVWF      SPBRG
0x01A3	0x1518      	BSF        TXSTA, 2
0x01A4	0x207C      	CALL       _UART1_Init
;Keypad.c,42 :: 		UART1_Write_Text("KeyPad 4*3");
0x01A5	0x3021      	MOVLW      ?lstr1_Keypad
0x01A6	0x00B2      	MOVWF      FARG_UART1_Write_Text_uart_text
0x01A7	0x2165      	CALL       _UART1_Write_Text
;Keypad.c,43 :: 		UART1_Write(10);
0x01A8	0x300A      	MOVLW      10
0x01A9	0x00B5      	MOVWF      FARG_UART1_Write_data_
0x01AA	0x204F      	CALL       _UART1_Write
;Keypad.c,44 :: 		UART1_Write(13);
0x01AB	0x300D      	MOVLW      13
0x01AC	0x00B5      	MOVWF      FARG_UART1_Write_data_
0x01AD	0x204F      	CALL       _UART1_Write
;Keypad.c,45 :: 		keypad_Init();
0x01AE	0x2060      	CALL       _Keypad_Init
;Keypad.c,47 :: 		while(1) {
L_main16:
;Keypad.c,48 :: 		if (UART1_Data_Ready()) // If data is received,
0x01AF	0x206A      	CALL       _UART1_Data_Ready
0x01B0	0x0870      	MOVF       R0, 0
0x01B1	0x1903      	BTFSC      STATUS, 2
0x01B2	0x29BB      	GOTO       L_main18
;Keypad.c,50 :: 		ala = UART1_Read();     // read the received data,
0x01B3	0x2071      	CALL       _UART1_Read
0x01B4	0x0870      	MOVF       R0, 0
0x01B5	0x00AD      	MOVWF      _ala
;Keypad.c,51 :: 		if (ala == 'A') get_key();
0x01B6	0x0870      	MOVF       R0, 0
0x01B7	0x3A41      	XORLW      65
0x01B8	0x1D03      	BTFSS      STATUS, 2
0x01B9	0x29BB      	GOTO       L_main19
0x01BA	0x208C      	CALL       _get_key
L_main19:
;Keypad.c,52 :: 		}
L_main18:
;Keypad.c,53 :: 		}
0x01BB	0x29AF      	GOTO       L_main16
;Keypad.c,54 :: 		}
L_end_main:
0x01BC	0x29BC      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003       [3]    _Delay_1us
0x0006       [8]    _Delay_10us
0x000E      [52]    _Keypad_Key_Press
0x0042      [13]    _Keypad_Key_Click
0x004F      [10]    _UART1_Write
0x0059       [7]    _____DoICP
0x0060      [10]    _Keypad_Init
0x006A       [7]    _UART1_Data_Ready
0x0071      [11]    _UART1_Read
0x007C      [16]    _UART1_Init
0x008C     [217]    _get_key
0x0165      [22]    _UART1_Write_Text
0x017B      [12]    ___CC2DW
0x0187      [54]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0006       [1]    PORTB
0x0006       [1]    keypadPort
0x000A       [1]    PCLATH
0x000C       [1]    PIR1
0x0018       [1]    RCSTA
0x0019       [1]    TXREG
0x001A       [1]    RCREG
0x0020       [1]    _oldstate
0x0021      [11]    ?lstr1_Keypad
0x002C       [1]    _kp
0x002D       [1]    _ala
0x002E       [2]    ___DoICPAddr
0x0030       [2]    _i
0x0032       [1]    FARG_UART1_Write_Text_uart_text
0x0032       [1]    FLOC__get_key
0x0033       [1]    UART1_Write_Text_data__L0
0x0034       [1]    UART1_Write_Text_counter_L0
0x0035       [1]    Keypad_Key_Click_rslt_L0
0x0035       [1]    FARG_UART1_Write_data_
0x0036       [1]    Keypad_Key_Press_rslt_L0
0x0037       [1]    Keypad_Key_Press_kdata_L0
0x0038       [1]    Keypad_Key_Press_loc_L0
0x0039       [1]    Keypad_Key_Press_rowcnt_L0
0x003A       [1]    Keypad_Key_Press_shifter_L0
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0087       [0]    TRISC6_bit
0x0087       [0]    TRISC7_bit
0x0098       [1]    TXSTA
0x0099       [1]    SPBRG
